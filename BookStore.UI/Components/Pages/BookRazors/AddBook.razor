@page "/add-book"
@using BookStore.UI.Models
@using BookStore.UI.Services
@inject IBookService BookService
@inject NavigationManager Navigation

<h3 class="text-center">Add a New Book</h3>



<div class="form-group">
    <label for="title">Title:</label>
    <InputText id="title" class="form-control" @bind-Value="newBook.Title"  />
</div>

<div class="form-group">
    <label for="type">Type:</label>
    <InputText id="type" class="form-control" @bind-Value="newBook.TypeBook"  />
</div>

<div class="form-group">
    <label for="price">Price:</label>
    <InputNumber id="price" class="form-control" @bind-Value="newBook.Price" />
</div>

<div class="form-group">
    <label for="publishedDate">Published Date:</label>
    <InputDate id="publishedDate" class="form-control" @bind-Value="newBook.PublishedDate"  />
</div>

<div class="form-group">
    <label for="authorId">Author Id:</label>
    <InputNumber id="authorId" class="form-control" @bind-Value="newBook.AuthorId"  />
</div>
<div><button @onclick="SaveBook" class="mt-xxl-3 btn btn-primary">Add Book</button></div>



@code {
    public BookListDto newBook = new();
    public BookListDto? addedBook;

    private async Task SaveBook()
    {
        try
        {
            addedBook = await BookService.AddBookAsync(newBook);

            Navigation.NavigateTo("/get-books");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error adding book: {ex.Message}");
        }
    }
}